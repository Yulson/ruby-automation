


###Git Tools - Stashing (https://git-scm.com/book/en/v1/Git-Tools-Stashing)

Often, when you’ve been working on part of your project, things are in a messy state and you want to switch branches for a bit to work on something else. The problem is, you don’t want to do a commit of half-done work just so you can get back to this point later. The answer to this issue is the git stash command.

Stashing takes the dirty state of your working directory — that is, your modified tracked files and staged changes — and saves it on a stack of unfinished changes that you can reapply at any time.




###Git Reset (https://git-scm.com/docs/git-reset)
git-reset - Reset current HEAD to the specified state

1. git reset [-q] [<tree-ish>] [--] <paths>…​
2. git reset (--patch | -p) [<tree-ish>] [--] [<paths>…​]
3. git reset [--soft | --mixed [-N] | --hard | --merge | --keep] [-q] [<commit>]

In the first and second form, copy entries from <tree-ish> to the index. In the third form, set the current branch head (HEAD) to <commit>, optionally modifying index and working tree to match. The <tree-ish>/<commit> defaults to HEAD in all forms.


